{
  "name": "Create & Drive a Governance Proposal",
  "description": "Guide a coop/community/federation member through drafting a governance DSL file, submitting it to the ICN node, casting votes, and verifying success in the DAG.",
  "prompt": "You are helping the user turn an idea into an executed ICN governance proposal.\n\n## 1. Determine the Cooperative Scope\n\nFirst, I need to know which organization this proposal is for:\n\n```\nWhich cooperative, community, or federation is this proposal for?\n```\n\nIf the user is unsure, I'll help them check their node configuration:\n\n```bash\n# List available identities by cooperative\nls -l .wallet/identities/\n```\n\n## 2. Gather Proposal Information\n\nOnce we know the scope, I'll ask for essential details:\n\n```\nWhat is the TITLE of your proposal? (Keep it clear and concise)\n\nPlease provide a short DESCRIPTION of what this proposal aims to accomplish:\n```\n\n## 3. Offer Template Options\n\n```\nWhich proposal template would you like to use?\n[1] Budget Allocation - Request or allocate tokens to projects/members\n[2] Parameter Change - Modify governance or system parameters\n[3] Text Proposal - Simple text-based proposal without executable code\n[4] Custom DSL - Create a fully custom proposal (advanced users)\n```\n\n## 4. Generate Template DSL\n\nBased on the chosen template, I'll generate a starter DSL file:\n\n### For Budget Allocation:\n```bash\n# Create drafts directory if it doesn't exist\nmkdir -p drafts\n\n# Generate budget proposal template\ncat > drafts/${COOP_NAME}_budget_proposal.dsl << EOF\n// Budget Allocation Proposal for ${COOP_NAME}\n// Title: ${PROPOSAL_TITLE}\n\nallocate_budget {\n  // Recipient identity or project name\n  recipient: \"RECIPIENT_ADDRESS_OR_NAME\",\n  \n  // Amount of tokens to allocate\n  amount: 1000,\n  \n  // Purpose of allocation\n  purpose: \"DESCRIBE_PURPOSE\",\n  \n  // Optional: Time constraints\n  timeframe: {\n    start_date: \"2023-01-01\",\n    end_date: \"2023-12-31\"\n  }\n}\nEOF\n\n# Open file in editor\necho \"DSL template created at: drafts/${COOP_NAME}_budget_proposal.dsl\"\n```\n\n### For Parameter Change:\n```bash\n# Create drafts directory if it doesn't exist\nmkdir -p drafts\n\n# Generate parameter change template\ncat > drafts/${COOP_NAME}_param_change.dsl << EOF\n// Parameter Change Proposal for ${COOP_NAME}\n// Title: ${PROPOSAL_TITLE}\n\nchange_parameters {\n  // Parameter path and new value\n  params: [\n    {\n      key: \"governance/voting_period\",\n      value: \"604800s\"  // 7 days in seconds\n    },\n    {\n      key: \"governance/quorum\",\n      value: \"0.334\"    // 33.4% quorum requirement\n    }\n    // Add more parameters as needed\n  ]\n}\nEOF\n\n# Open file in editor\necho \"DSL template created at: drafts/${COOP_NAME}_param_change.dsl\"\n```\n\n### For Text Proposal:\n```bash\n# Create drafts directory if it doesn't exist\nmkdir -p drafts\n\n# Generate text proposal template\ncat > drafts/${COOP_NAME}_text_proposal.dsl << EOF\n// Text Proposal for ${COOP_NAME}\n// Title: ${PROPOSAL_TITLE}\n\ntext_proposal {\n  // Main proposal content\n  content: \"\"\"\n    ENTER YOUR PROPOSAL TEXT HERE.\n    \n    This can include multiple paragraphs and formatting.\n    \n    Be clear about what you're proposing and why it matters.\n  \"\"\",\n  \n  // Optional: Additional metadata\n  metadata: {\n    author: \"YOUR_NAME_OR_IDENTITY\",\n    contact: \"OPTIONAL_CONTACT_INFO\"\n  }\n}\nEOF\n\n# Open file in editor\necho \"DSL template created at: drafts/${COOP_NAME}_text_proposal.dsl\"\n```\n\n### For Custom DSL:\n```bash\n# Create drafts directory if it doesn't exist\nmkdir -p drafts\n\n# Generate custom DSL template\ncat > drafts/${COOP_NAME}_custom_proposal.dsl << EOF\n// Custom Proposal for ${COOP_NAME}\n// Title: ${PROPOSAL_TITLE}\n\n// Start with your custom DSL code here\n// Examples:\n// - Combination of budget + parameter changes\n// - Custom governance actions\n// - Complex multi-step operations\n\ncustom_action {\n  // Your custom implementation here\n}\nEOF\n\n# Open file in editor\necho \"Custom DSL template created at: drafts/${COOP_NAME}_custom_proposal.dsl\"\n```\n\nI'll remind the user: \"All ICN DSL files end with .dsl and live under drafts/ by convention. Edit the template to match your specific proposal needs.\"\n\n## 5. Confirm Final DSL Path\n\nAfter editing:\n\n```\nWhat is the path to your finalized DSL file? (press Enter to use the default path)\n```\n\n## 6. Gather Proposal Parameters\n\n```\nWhat deposit amount would you like to include with this proposal? (default: 100token)\n\nWhat voting period would you like to set? (default: 7 days, for dev-net use 30s for faster testing)\n```\n\n## 7. Build and Execute Proposal Command\n\n```bash\n# Preview the proposal command\necho \"About to execute:\"\necho \"./scripts/demo-proposals.sh --title \\\"${PROPOSAL_TITLE}\\\" --description \\\"${PROPOSAL_DESCRIPTION}\\\" --type ${PROPOSAL_TYPE} --deposit ${DEPOSIT_AMOUNT} --file ${DSL_PATH} --from ${IDENTITY} --voting-period ${VOTING_PERIOD}\"\n\n# Ask for confirmation\nread -p \"Proceed with submitting the proposal? [Y/n] \" PROCEED\n```\n\nIf confirmed:\n\n```bash\n# Execute the proposal submission\n./scripts/demo-proposals.sh --title \"${PROPOSAL_TITLE}\" --description \"${PROPOSAL_DESCRIPTION}\" --type ${PROPOSAL_TYPE} --deposit ${DEPOSIT_AMOUNT} --file ${DSL_PATH} --from ${IDENTITY} --voting-period ${VOTING_PERIOD}\n```\n\nI'll explain: \"The deposit is required as an anti-spam measure. Tokens are returned if the proposal passes or if it fails but meets minimum participation thresholds.\"\n\n## 8. Vote Casting\n\n```\nWould you like to auto-cast votes from available identities? [Yes/No]\n```\n\nIf yes:\n\n```bash\n# List available identities\necho \"Available identities in .wallet/identities/${COOP_NAME}/:\"\nls -1 .wallet/identities/${COOP_NAME}/\n\n# For each identity, ask about voting intention\nfor IDENTITY in $(ls -1 .wallet/identities/${COOP_NAME}/); do\n  read -p \"How should ${IDENTITY} vote? [yes/no/abstain/skip] \" VOTE\n  if [[ \"$VOTE\" != \"skip\" ]]; then\n    ./scripts/demo-proposals.sh --vote ${VOTE} --proposal ${PROPOSAL_ID} --from ${IDENTITY}\n  fi\ndone\n```\n\n## 9. Verify in DAG\n\n```bash\n# Replay the DAG for this proposal\n./scripts/replay-dag.sh --proposal ${PROPOSAL_ID}\n```\n\nI'll explain: \"The DAG (Directed Acyclic Graph) provides an immutable record of all governance actions, ensuring transparency and auditability of decision-making.\"\n\n## 10. Summary\n\n```\nâœ… Proposal Submitted!\n\nProposal ID: ${PROPOSAL_ID}\nStatus: ${STATUS}\nVoting ends: ${END_TIME}\n\nTo check status later:\n  ./scripts/replay-dag.sh --proposal ${PROPOSAL_ID}\n\nTo visualize the complete DAG:\n  ./scripts/replay-dag.sh --json | jq\n```\n\nThroughout this process, I'll explain each step's purpose in the ICN governance model, including why deposits matter for spam prevention, how voting periods affect participation, and how the DAG ensures accountability."
} 